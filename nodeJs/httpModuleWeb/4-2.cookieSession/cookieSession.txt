클라이언트에서 보내는 요청에는 한가지 단점이 있음
바로 누가 요청을 보내는지 모른다는것 !
물론 요청을 보내는 IP주소나 브라우저의 정보를 받아올수는 있음
하지만 여러 컴퓨터가 공통으로 IP주소를 가지거나 한 컴퓨터를 여러 사람이 사용할 수 도 있음

그렇다면 로그인을 구현하면 되지 않냐고 생각할 수도 있음 .  그 말도 맞는말
하지만 로그인을 구현하려면 쿠키와 세션에 대해 알고 있어야함 
우리가 웹사이트에 방문해서  로그인을 할때 내부적으로는 쿠키와 세션을 사용하고 있음
로그인한 후에는 새로고침 (새로운 요청)을 해도 로그아웃 되지 않음 
그 이유는 클라이언트가 서버에게 우리가 누구인지를 지속적으로 알려주고 있기 때문임

우리가 누구인지 기억하기 위해서 서버는 요청에 대한 응답을 할때 쿠키라는 것을 같이 보내줌 
쿠키는 name=zerocho  같이  단순한 키- 값 임
서버로부터 쿠키가 오면 웹브라우저는 쿠키를 저장해 두었다가 요청할떄마다 쿠키를 동봉해서 보내줌
서버는 요청에 들어있는 쿠키를 읽어서 사용자가 누구인지 파악함
브라우저는 쿠키가 있다면 자동으로 동봉해서 보내주므로 따로 처리할 필요가 없음
서버에서 브라우저로 쿠키를 보낼때만 우리가 코드를 작성하여 처리하면됨

즉 서버는 미리 클라이언트에 요청자를 추정할 만한 정보를 쿠키로 만들어 보내고 
그 다음부터는 클라이언트로부터 쿠키를 받아 요청자를 파악함
쿠키가 우리가 누구인지 추적하고 있는것 
개인정보 유출 방지를 위해 쿠키를 주기적으로 지우라는 말이 바로 이러한 이유 떄문임


server3.js 참조



////////////////////////////////////////////////////////////////////////////////
HTTP 상태코드 
res.writeHead에 첫번쨰 인자로 성공을 알리는 상태코드인 200을 넣어주었는데 , 브라우저는 서버에서 보내주는 상태 코드를 보고 요청이 성공했는지 실패했는지를 판단함
2XX : 성공을 알리는 상태 코드임  200(성공) ,201(작성됨)
3XX : 리다이렉션 (다른페이지 이동)을 알리는 상태코드  어떤 주소를 입력했는데 다른 주소의 페이지로 넘어갈 떄 이 코드가 사용됨 301(영구이동), 302 (임시이동)
4XX : 요청 오류를 나타냄  요청자체에 오류가 있을떄 표시  401(권한 없음), 403 (금지됨), 404 (찾을수 없음)
5XX : 서버 오류를 나타냄 요청은 제대로 왔지만 서버에 오류가 생겼을때 발생함 .  이 오류가 뜨지 않게 주의해서 프로그래밍 해야함 
이 오류를 클라이언트로 res.writeHead 로 직접 보내는 경우는 없고 , 예기치 못한 에러 발생시 서버가 알아서 5XX코드를 보내고
500(내부 서버 오류),502(불량 게이트웨이),503(서비스를 사용할 수 없음) 


///////////////////////////////////////////////////////

헤더와 본문

요청과 응답은 모두 헤더와 본문을 가지고 있음 
헤더는 요청또는 응답에 대한 정보를 가지고 있는 곳이고 , 본문은 서버와 클라이언트 간에 주고받을 실제 데이터를 담아두는 공간 
쿠키는 부가적인 정보이므로 헤더에 저장함
HTTP Header
HTTP Body

콘솔창에 network 탭을 사용해서 요청과 응답에 대해 상세하게 볼수 있음 웹을 개발할떄 활용하면 좋음